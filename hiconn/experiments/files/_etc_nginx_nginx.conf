user www-data;
worker_processes 1;
pid /run/nginx.pid;

worker_rlimit_nofile 500000;

events {
        # Determines how many clients will be served by each worker process.
        # (Max clients = worker_connections * worker_processes)
        # "Max clients" is also limited by the number of socket connections available on the system (~64k)
        worker_connections 5000;

        # essential for linux, optmized to serve many clients with each thread
        use epoll;

        # Accept as many connections as possible, after nginx gets notification about a new connection.
        # May flood worker_connections, if that option is set too low
        multi_accept on;
}

http {
        large_client_header_buffers 32 64k;
        keepalive_timeout 65;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        types_hash_max_size 2048;
        server_tokens off;
        server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        gzip off;

        access_log off;
        #error_log off;
        error_log /data/nginx/error.log;

        log_format trackerfmt $msec|$request_time|$remote_addr|$request_uri;

        server {
            listen 80 default_server backlog=65535;
            listen [::]:80 default_server ipv6only=on backlog=65535;
            listen 1000;

            server_name logserver.analytics-tracker\.thescore\.com;

            location / {
                limit_except POST {
                    deny all;
                }
                keepalive_timeout 30;
                keepalive_requests 200;
                client_max_body_size 1;
                client_body_buffer_size 1k;
                client_body_timeout 5;
                error_page 303 = @log;
                error_page 413 = @log;
                recursive_error_pages on;
                return 303;
            }

            location @log {
              default_type text/plain;
              access_log /data/nginx/access.log trackerfmt;
              return 200;
            }
        }

        server {
            listen 80;
            listen 1000 default_server;

            server_name ~^health\..+\.analytics-tracker\.thescore\.com$;

            location ~* ^/(.*)$ {
              index index.html;
              default_type text/plain;
              alias /opt/health-report/$1;
              access_log off;
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Methods' 'GET';
            }
        }

        server {
            listen 1010;   # only accept local host connection

            location / {
              stub_status on;
              access_log off;

              #error_page 418 =200 /report/too-many-connection;
              #recursive_error_pages on;
              #if ($connections_active ~ "[5-9][0-9]{4}|[1-9][0-9]{5,}") {
              #if ($connections_active ~ "[5-9][0-9]|[1-9][0-9]{2,}") {
              #  return 418;
              #}
            }

            location /monit/ {
              proxy_pass http://127.0.0.1:1011/;
            }
        }
}
